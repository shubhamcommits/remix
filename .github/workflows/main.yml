name: Deploy to AWS

on:
  push:
    branches:
      - development
      - main
  pull_request:
permissions:
      id-token: write
      contents: read
      pull-requests: write
env:
  AWS_ROLE: ${{ secrets.AWS_ROLE }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
  AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}

jobs:
  build-code:
    name: Build the Code
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Build the Code
      id: job-step-build-code
      run: |
        echo "Building the code..."

        # Install the Dependencies
        yarn install

        # Build the application
        yarn run build

        # Remove the Dependencies
        rm -rf node_modules

    - name: Store build output
      id: job-step-store-build-output
      uses: actions/upload-artifact@v3
      with:
        name: build-output
        path: .

  provision-infra:
    name: Provision Infrastructure
    runs-on: ubuntu-latest
    needs: [ build-code ]
    
    steps:
      - name: Configure AWS credentials from AWS account
        id: job-step-aws-conf
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM    

      - name: Download Build Output
        uses: actions/download-artifact@v3
        with:
          name: build-output
      
      - name: List All Files
        id: job-step-tf-list-files
        run: |
          ls -la

      - name: Setup Terraform
        id: job-step-tf-setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Terraform Format
        id: job-step-tf-fmt
        run: terraform -chdir=./terraform fmt
        continue-on-error: true

      - name: Terraform Initialize
        id: job-step-tf-init
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
        run: terraform -chdir=./terraform init 
            -var-file=environment.tfvars
            -backend-config="bucket=${AWS_BUCKET_NAME}" 
            -backend-config="key=${AWS_BUCKET_KEY_NAME}"
            -backend-config="region=${AWS_REGION}"

      - name: Select Existing/Create Terraform Workspace
        id: job-step-tf-init-workspace
        env:
          TERRAFORM_WORKSPACE: development
        run: |
            terraform -chdir=./terraform workspace select $TERRAFORM_WORKSPACE || terraform workspace new $TERRAFORM_WORKSPACE

      - name: Show Current Workspace
        id: job-step-tf-show-workspace
        run: terraform -chdir=./terraform workspace show

      - name: Terraform Validate
        id: job-step-tf-validate
        run: terraform -chdir=./terraform validate

      - name: Set environment variable based on branch
        run: |
          if [ "$GITHUB_REF" = "refs/heads/master" ] || [ "$GITHUB_REF" = "refs/heads/main" ]; then
            echo "TF_VAR_environment_name=prod" >> $GITHUB_ENV
          elif [ "$GITHUB_REF" = "refs/heads/development" ]; then
            echo "TF_VAR_environment_name=dev" >> $GITHUB_ENV
          fi

      - name: Terraform Plan
        id: job-step-tf-plan
        run: terraform -chdir=./terraform plan
        if: github.event_name == 'pull_request' || github.event_name == 'push'
        env:
          TF_VAR_environment_name: ${TF_VAR_environment_name}
          TF_VAR_application_name: recipe-remix
        continue-on-error: true